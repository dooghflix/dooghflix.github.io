{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["data","JSON","parse","stringify","kk","BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","createMuiTheme","primary","main","secondary","light","dark","contrastText","useStyles","makeStyles","width","margin","media","height","gridList","heading","typography","pxToRem","fontWeight","fontWeightRegular","bb","gridd","selectEmpty","formControl","button","Showw","props","classes","Grid","container","className","grid","justify","alignItems","value","map","index","type","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","about","CardActions","Button","size","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","seasons","reduce","result","v","indexx","push","List","episodes","indexxx","length","ListItem","ListItemText","ListItemSecondaryAction","IconButton","edge","aria-label","Link","to","Home","Video","useParams","s","e","mkv","useState","link","setLink","copy","setCopy","ThemeProvider","url","controls","item","xs","Select","onChange","event","target","displayEmpty","i","MenuItem","onClick","preventDefault","window","location","href","text","onCopy","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23e98bf8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport kk from './all.json';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CardDeck } from 'react-bootstrap';\nimport { GridListTile, GridList,Grid, Accordion, AccordionSummary, AccordionDetails, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Select, MenuItem, FormControl, } from '@material-ui/core';\nimport Flatlist from 'flatlist-react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { CenterFocusStrong } from '@material-ui/icons';\nimport {  BrowserRouter as Router,Route, Switch, useParams, Link, NavLink } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nconst kkkk = ''\nconst data = JSON.parse(JSON.stringify(kk));\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFF',\n\n    },\n    secondary: {\n      light: '#FFFF',\n      main: '#FFFFF',\n      dark: '#FFFF',\n      contrastText: '#000',\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) =>({\n  root: {\n    width: 315,\n    margin: 10,\n  },\n  media: {\n    height: 140,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n    width: 205,\n  },\n  bb:{\n    width: '100%',\n  },\n  gridd: {\n    backgroundColor: theme.palette.primary.light,\n    width:'100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    width: '100%',\n  },\n  button:{\n    backgroundColor: theme.palette.background.paper,\n  }\n}));\nfunction Showw(props){\n  const classes = useStyles();\nreturn(\n  <Grid container className={classes.grid} justify = \"center\" alignItems = \"center\">\n          {props.value.map((value, index) => {\n            if (!!value){\n              \n            }\n            if (value.type === \"series\"){\n          return <Card className={classes.root}>\n  <CardActionArea>\n    <CardMedia\n      className={classes.media}\n      image={value.image}\n      title={value.title}\n    />\n    <CardContent>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n      {value.title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n      {value.about}\n      </Typography>\n    </CardContent>\n  </CardActionArea>\n  <CardActions>\n    <Button size=\"small\" color=\"primary\">\n      Share\n    </Button>\n    <Button size=\"small\" color=\"primary\">\n      Learn More\n    </Button>\n  </CardActions>\n  <CardActions>\n    <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Show links</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n        <div className={classes.bb}>\n          {value.seasons.reduce((result,v,indexx) =>{\n\n            if (JSON.stringify(v)!='{\"episodes\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]}'){\n              \n              result.push(<Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={classes.heading}>{\"Season \"+(indexx+1)}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n              \n                <List className={classes.heading}>\n                {v.episodes.reduce((result,value, indexxx) => {\n                  if (value && value.length > 0){\n                    result.push(<ListItem>\n                      <ListItemText\n                             primary={\"Episode \"+(indexxx+1)}\n                             secondary={\"test\"}\n                           />\n                           <ListItemSecondaryAction>\n                             <IconButton edge=\"end\" aria-label=\"play\" component={Link} to={\"/video/\"+index+\"/\"+indexx+\"/\"+indexxx}>\n                               <PlayArrowIcon />\n                             </IconButton>\n                           </ListItemSecondaryAction>\n                   </ListItem>);\n                  }\n              return result;\n            }, [])}\n                </List>\n               \n                </AccordionDetails>\n            </Accordion>);\n            \n            }\n            return result;\n          }, [])}\n        </div>\n        </AccordionDetails>\n    </Accordion>\n  </CardActions>\n  \n</Card>}else{\n  return <Card className={classes.root}>\n  <CardActionArea>\n    <CardMedia\n      className={classes.media}\n      image={value.image}\n      title={value.title}\n    />\n    <CardContent>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n      {value.title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n      {value.about}\n      </Typography>\n    </CardContent>\n  </CardActionArea>\n  <CardActions>\n    <Button size=\"small\" color=\"primary\">\n      Share\n    </Button>\n    <Button size=\"small\" color=\"primary\">\n      Learn More\n    </Button>\n    <IconButton edge=\"end\" aria-label=\"play\" component={Link} to={\"/video/\"+index+\"/0/0/\"}>\n                      <PlayArrowIcon />\n                    </IconButton>\n  </CardActions>\n  \n</Card>\n}\n})}    </Grid>\n);\n}\n\nfunction Home(props){\n  const classes = useStyles();\n  return(<div className=\"App\">\n  <header className=\"App-header\">\n  </header>\n  <body className=\"body\">\n  <Showw className=\"cards\" value={data}/>\n  </body>\n</div>);\n}\nfunction Video(){\n  const classes = useStyles();\n  let {id,s,e} = useParams();\n  const mkv = data[id].seasons[s].episodes[e];\n  const [link,setLink] = useState(mkv[0]);\n  const [copy,setCopy] = useState('Copy link');\n  const handleChange = (event) => {\n    setLink(event.target.value);\n    setCopy('Copy link');\n  };\n  return(\n    \n    <ThemeProvider theme={theme}>\n    <ReactPlayer url={link} controls={true} width=\"100%\"/>\n    <Grid container className={classes.gridd} spacing={1} justify = \"center\" alignItems = \"center\">\n      <Grid item xs={4}>\n    <Select\n          value={link}\n          onChange={handleChange}\n          displayEmpty\n          input={<BootstrapInput />}\n        >\n          {mkv.map((v,i) => {\n            return <MenuItem value={v} >\n              {\"Link \"+(i+1)}\n            </MenuItem>\n          })}\n        </Select>\n        </Grid>\n        <Grid item xs={4}>\n        <Button  color='primary' type=\"button\" className={classes.button}\n    onClick={(e) => {\n      e.preventDefault();\n      window.location.href='vlc://'+link;\n      }}>open in VLC</Button></Grid>\n      <Grid item xs={4}>\n          <CopyToClipboard text={link}\n          onCopy={() => setCopy('Copied!')}>\n          <Button className={classes.button}>{copy}</Button>\n        </CopyToClipboard>\n      </Grid></Grid>\n        </ThemeProvider>\n    );\n}\n\nfunction App() {\n  \n  return (\n\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home data={data}/>\n        </Route>\n        <Route path=\"/video/:id/:s/:e\">\n          <Video />\n        </Route>\n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}