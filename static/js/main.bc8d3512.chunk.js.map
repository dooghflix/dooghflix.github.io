{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","margin","media","height","gridList","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","bb","grid","Showw","props","classes","Card","className","CardActionArea","CardMedia","image","value","title","CardContent","Typography","gutterBottom","variant","component","color","about","CardActions","Button","size","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","seasons","map","v","i","List","episodes","index","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","ShowCards","Grid","container","align","justify","alignItems","App","data","JSON","parse","stringify","kk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"++CAAe,I,qNCkBTA,EAAYC,aAAW,SAACC,GAAD,MAAW,CACtCC,KAAM,CACJC,MAAO,IACPC,OAAQ,IAEVC,MAAO,CACLC,OAAQ,KAEVC,SAAU,CACRJ,MAAO,IACPG,OAAQ,KAEVE,QAAS,CACPC,SAAUR,EAAMS,WAAWC,QAAQ,IACnCC,WAAYX,EAAMS,WAAWG,kBAC7BV,MAAO,KAETW,GAAG,CACDX,MAAO,QAETY,KAAM,OAIR,SAASC,EAAMC,GACb,IAAMC,EAAUnB,IAClB,OACE,eAACoB,EAAA,EAAD,CAAMC,UAAWF,EAAQhB,KAAzB,UACA,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEF,UAAWF,EAAQb,MACnBkB,MAAON,EAAMO,MAAMD,MACnBE,MAAOR,EAAMO,MAAMC,QAErB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACCb,EAAMO,MAAMC,QAEb,cAACE,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACCb,EAAMO,MAAMQ,cAIjB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQJ,MAAM,UAA3B,mBAGA,cAACG,EAAA,EAAD,CAAQC,KAAK,QAAQJ,MAAM,UAA3B,2BAIF,cAACE,EAAA,EAAD,UACE,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdC,GAAG,iBAHL,SAKE,cAACb,EAAA,EAAD,CAAYP,UAAWF,EAAQV,QAA/B,0BAEF,cAACiC,EAAA,EAAD,UACA,qBAAKrB,UAAWF,EAAQJ,GAAxB,SACGG,EAAMO,MAAMkB,QAAQC,KAAI,SAACC,EAAEC,GAC1B,OAAO,eAACT,EAAA,EAAD,WACP,cAACC,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdC,GAAG,iBAHL,SAKE,cAACb,EAAA,EAAD,CAAYP,UAAWF,EAAQV,QAA/B,SAAyC,WAAWqC,EAAE,OAExD,cAACJ,EAAA,EAAD,UAEA,cAACK,EAAA,EAAD,CAAM1B,UAAWF,EAAQV,QAAzB,SACCoC,EAAEG,SAASJ,KAAI,SAACnB,EAAOwB,GAC1B,OAAO,eAACC,EAAA,EAAD,WACJ,cAACC,EAAA,EAAD,CACOC,QAAS,WAAWH,EAAM,GAC1BI,UAAW,SAEb,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,OAAlC,SACE,cAAC,IAAD,oCAkBtB,SAASC,EAAUxC,GACjB,IAAMC,EAAUnB,IAChB,OACF,eAAC2D,EAAA,EAAD,CAAMC,WAAS,EAACvC,UAAWF,EAAQH,KAAM6C,MAAQ,SAASC,QAAU,SAASC,WAAa,SAA1F,UACW7C,EAAMO,MAAMmB,KAAI,SAACnB,EAAOwB,GACzB,OAAO,cAAChC,EAAD,CAAOQ,MAAOA,OAF/B,UAqBeuC,MAff,WACkBhE,IAAhB,IACMiE,EAAOC,KAAKC,MAAMD,KAAKE,UAAUC,IACvC,OACE,sBAAKhD,UAAU,MAAf,UACE,wBAAQA,UAAU,eAElB,sBAAMA,UAAU,OAAhB,SAEA,cAACqC,EAAD,CAAWrC,UAAU,QAAQI,MAAOwC,UClI1CK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bc8d3512.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport kk from './all.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CardDeck } from 'react-bootstrap';\nimport { GridListTile, GridList,Grid, Accordion, AccordionSummary, AccordionDetails, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport Flatlist from 'flatlist-react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { CenterFocusStrong } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) =>({\n  root: {\n    width: 315,\n    margin: 10,\n  },\n  media: {\n    height: 140,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n    width: 205,\n  },\n  bb:{\n    width: '100%',\n  },\n  grid: {\n    \n  },\n}));\nfunction Showw(props){\n  const classes = useStyles();\nreturn(\n  <Card className={classes.root}>\n  <CardActionArea>\n    <CardMedia\n      className={classes.media}\n      image={props.value.image}\n      title={props.value.title}\n    />\n    <CardContent>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n      {props.value.title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n      {props.value.about}\n      </Typography>\n    </CardContent>\n  </CardActionArea>\n  <CardActions>\n    <Button size=\"small\" color=\"primary\">\n      Share\n    </Button>\n    <Button size=\"small\" color=\"primary\">\n      Learn More\n    </Button>\n  </CardActions>\n  <CardActions>\n    <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Show links</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n        <div className={classes.bb}>\n          {props.value.seasons.map((v,i) =>{\n            return <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>{\"Season \"+(i+1)}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n          \n            <List className={classes.heading}>\n            {v.episodes.map((value, index) => {\n          return <ListItem>\n             <ListItemText\n                    primary={\"Episode\"+(index+1)}\n                    secondary={\"test\"}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"play\">\n                      <PlayArrowIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n          </ListItem>\n        })}\n            </List>\n           \n            </AccordionDetails>\n        </Accordion>\n          })}\n        </div>\n        </AccordionDetails>\n    </Accordion>\n  </CardActions>\n  \n</Card>\n);\n}\nfunction ShowCards(props){\n  const classes = useStyles();\n  return( \n<Grid container className={classes.grid} align = \"center\" justify = \"center\" alignItems = \"center\">\n          {props.value.map((value, index) => {\n          return <Showw value={value}/>\n        })}    </Grid>\n    );\n}\nfunction App() {\n  const classes = useStyles();\n  const data = JSON.parse(JSON.stringify(kk));\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <body className=\"body\">\n      \n      <ShowCards className=\"cards\" value={data}/>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}